version: 2

terraform: &terraform
  docker:
    - image: hashicorp/terraform:0.11.8
  working_directory: /tmp/workspace/terraform

jobs:
  validate:
    <<: *terraform
    steps:
      - checkout
      - run:
          name: terraform init
          command: terraform init -input=false
      - run:
          name: Validate Terraform configurations
          command: find ./modules -type f -name "*.tf" -exec dirname {} \;|sort -u | while read m; do (terraform validate -check-variables=false "$m" && echo "âˆš $m") || exit 1 ; done
      - run:
          name: Check if Terraform configurations are properly formatted
          command: if [[ -n "$(terraform fmt -write=false modules)" ]]; then echo "Some terraform files need be formatted, run 'terraform fmt' to fix"; exit 1; fi
      - run:
          name: Install tflint
          command: curl -L -o /tmp/tflint.zip https://github.com/wata727/tflint/releases/download/v0.7.2/tflint_linux_amd64.zip && unzip /tmp/tflint.zip -d /usr/local/bin
      - run:
          name: Check Terraform configurations with tflint
          command: cd modules && tflint
      - persist_to_workspace:
          root: .
          paths: .

  test:
    <<: *terraform
    steps:
      - checkout
      # The weird way you have to set PATH in Circle 2.0
      - run: echo 'export PATH=$HOME/.local/bin:$HOME/terraform:$HOME/packer:$PATH' >> $BASH_ENV
      # Install HashiCorp dependencies
      - restore_cache:
          keys:
            - v1-external-dep
            - v1-dep-{{ checksum "test/Gopkg.lock" }}
      # go test needs an empty main.go file otherwise it will complain
      - run:
          name: Foo
          command: |
            cat > main.go << EOF
            package main
            func main() {
            }
            EOF
      - save_cache:
          key: v1-external-dep
          paths:
            - $HOME/terraform
            - $HOME/packer
      - save_cache:
          key: v1-dep-{{ checksum "test/Gopkg.lock" }}
          paths:
            - $HOME/.go_workspace/src/github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/test/vendor
      # Run the tests
      - run: cd test; go test -v -timeout 60m

workflows:
  version: 2
  build:
    jobs:
      - validate
